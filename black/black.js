const dealerCards = document.getElementById("dealerCards");
const playerCards = document.getElementById("playerCards");
const startBtn = document.getElementById("startBtn");
const hitBtn = document.getElementById("hitBtn");
const standBtn = document.getElementById("standBtn");
const betInput = document.getElementById("bet");
const moneyBox = document.getElementById("moneyBox");

let playerHand = [];
let dealerHand = [];
let hiddenCard = null;
let playerTotal = 0;
let dealerTotal = 0;
let money = parseInt(moneyBox.textContent);

// seg√©df√ºggv√©ny: k√°rtya l√©trehoz√°sa
function createCard(value) {
  let card = document.createElement("div");
  card.classList.add("card");
  card.textContent = value;
  return card;
}

// v√©letlen k√°rtya 1‚Äì11 k√∂z√∂tt
function drawCard() {
  return Math.floor(Math.random() * 11) + 1;
}

// √∂sszeg kisz√°m√≠t√°sa
function handValue(hand) {
  return hand.reduce((a, b) => a + b, 0);
}

// j√°t√©k ind√≠t√°sa
startBtn.addEventListener("click", () => {
  dealerCards.innerHTML = "";
  playerCards.innerHTML = "";
  playerHand = [];
  dealerHand = [];
  hiddenCard = null;

  const bet = parseInt(betInput.value);

  if (bet > money) {
    alert("Nincs el√©g p√©nzed a t√©tre!");
    return;
  }

  // p√©nz levon√°s
  money -= bet;
  moneyBox.textContent = money;

  // j√°t√©kos 2 lap
  playerHand.push(drawCard());
  playerHand.push(drawCard());

  playerHand.forEach(val => {
    playerCards.appendChild(createCard(val));
  });

  // oszt√≥ 1 l√°that√≥ + 1 rejtett
  dealerHand.push(drawCard());
  hiddenCard = drawCard();

  dealerCards.appendChild(createCard(dealerHand[0]));
  dealerCards.appendChild(createCard("?"));

  console.log("Player hand:", playerHand);
  console.log("Dealer hidden:", hiddenCard);

  // üîí Start gomb √©s t√©t letilt√°sa
  startBtn.disabled = true;
  betInput.disabled = true;
});

// Hit gomb
hitBtn.addEventListener("click", () => {
  let newCard = drawCard();
  playerHand.push(newCard);
  playerCards.appendChild(createCard(newCard));

  // ha t√∂bb mint 21, azonnal v√©ge (mintha stand-et nyomtunk volna)
  if (handValue(playerHand) > 21) {
    standBtn.click(); 
  }
});

// Stand gomb
standBtn.addEventListener("click", () => {
  playerTotal = handValue(playerHand);

  // oszt√≥ k√°rty√°k megjelen√≠t√©se
  dealerCards.innerHTML = "";
  dealerHand.push(hiddenCard); // a rejtett k√°rtya is beker√ºl
  dealerHand.forEach(val => {
    dealerCards.appendChild(createCard(val));
  });

  dealerTotal = handValue(dealerHand);

  // oszt√≥ h√∫z, am√≠g <16 vagy am√≠g nem nagyobb a j√°t√©kosn√°l
  while (dealerTotal < 16 || (dealerTotal <= playerTotal && dealerTotal < 21)) {
    let newCard = drawCard();
    dealerHand.push(newCard);
    dealerCards.appendChild(createCard(newCard));
    dealerTotal = handValue(dealerHand);
  }

  // ki√©rt√©kel√©s
  let result = "";
  const bet = parseInt(betInput.value);

  if (playerTotal > 21) {
    result = `Vesztett√©l! T√∫ll√©pted a 21-et (${playerTotal}).`;
  } else if (dealerTotal > 21) {
    result = `Nyert√©l! Az oszt√≥ t√∫ll√©pte a 21-et (${dealerTotal}).`;
    money += bet * 2;
  } else if (dealerTotal > playerTotal) {
    result = `Vesztett√©l! Oszt√≥: ${dealerTotal}, Te: ${playerTotal}`;
  } else if (dealerTotal < playerTotal) {
    result = `Nyert√©l! Oszt√≥: ${dealerTotal}, Te: ${playerTotal}`;
    money += bet * 2;
  } else {
    result = `D√∂ntetlen! Mindkett≈ë: ${playerTotal}`;
    money += bet; // visszakapja a t√©tet
  }

  moneyBox.textContent = money;
  alert(result);

  // üîì Start gomb √©s t√©t √∫jra enged√©lyez√©se
  startBtn.disabled = false;
  betInput.disabled = false;
});
